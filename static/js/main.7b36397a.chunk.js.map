{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","handleFeedback","map","option","className","s","button","type","value","onClick","Notification","message","text","Statistics","good","neutral","bad","total","positivePercentage","list","item","Section","title","children","container","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,KAAO,2B,oBCAzFD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,UAAY,6B,qIC2BfC,EAvBS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEC,UAAWC,IAAEC,OACbC,KAAK,SACLC,MAAOL,EACPM,QAASR,EALX,SAOGE,GANIA,S,gBCNA,SAASO,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGP,UAAWC,IAAEO,KAAhB,SAAuBD,I,oBCqCjBE,EArCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAOD,EACL,qBAAIb,UAAWC,IAAEc,KAAjB,UACE,qBAAIf,UAAWC,IAAEe,KAAjB,UACE,mBAAGhB,UAAWC,IAAEO,KAAhB,mBACA,sBAAMR,UAAWC,IAAEO,KAAnB,SAA0BE,OAE5B,qBAAIV,UAAWC,IAAEe,KAAjB,UACE,mBAAGhB,UAAWC,IAAEO,KAAhB,sBACA,sBAAMR,UAAWC,IAAEO,KAAnB,SAA0BG,OAE5B,qBAAIX,UAAWC,IAAEe,KAAjB,UACE,mBAAGhB,UAAWC,IAAEO,KAAhB,kBACA,sBAAMR,UAAWC,IAAEO,KAAnB,SAA0BI,OAE5B,qBAAIZ,UAAWC,IAAEe,KAAjB,UACE,mBAAGhB,UAAWC,IAAEO,KAAhB,oBACA,sBAAMR,UAAWC,IAAEO,KAAnB,SAA0BK,OAE5B,qBAAIb,UAAWC,IAAEe,KAAjB,UACE,mBAAGhB,UAAWC,IAAEO,KAAhB,iCACA,uBAAMR,UAAWC,IAAEO,KAAnB,UAA0BM,EAA1B,aAIJ,cAACR,EAAD,CAAcC,QAAQ,uB,gBC3BX,SAASU,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASnB,UAAWC,IAAEmB,UAAtB,UACE,6BAAKF,IACJC,KCoDQE,MArDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAIMC,EAAqB,WACzB,OAAOhB,EAAOC,EAAUC,GA0B1B,OACE,gCACE,cAACK,EAAD,CAASC,MAAM,0BAAf,SACE,cAAC,EAAD,CAAiBtB,QAhCP,CAAC,OAAQ,UAAW,OAgCKC,eApBlB,SAAA8B,GAErB,OADaA,EAAEC,OAAOxB,OAEpB,IAAK,OACHmB,EAAQb,EAAO,GACf,MACF,IAAK,UACHc,EAAWb,EAAU,GACrB,MACF,IAAK,MACHc,EAAOb,EAAM,GACb,MACF,QACE,aAUF,cAACK,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,IACPZ,mBAlCCY,EACHG,KAAKC,MAAOpB,EAAOgB,IAAwB,KAC3C,UCdRK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7b36397a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3Kz-u\",\"item\":\"Statistics_item__1bAR6\",\"text\":\"Statistics_text__2Nvr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3lPBj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2x23h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__s6da8\"};","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, handleFeedback }) => {\n  return (\n    <div>\n      {options.map(option => (\n        <button\n          key={option}\n          className={s.button}\n          type=\"button\"\n          value={option}\n          onClick={handleFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  handleFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.text}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return total ? (\n    <ul className={s.list}>\n      <li className={s.item}>\n        <p className={s.text}>Good:</p>\n        <span className={s.text}>{good}</span>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>Neutral:</p>\n        <span className={s.text}>{neutral}</span>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>Bad:</p>\n        <span className={s.text}>{bad}</span>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>Total:</p>\n        <span className={s.text}>{total}</span>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>PositivePercentage:</p>\n        <span className={s.text}>{positivePercentage}%</span>\n      </li>\n    </ul>\n  ) : (\n    <Notification message=\"No feedback given\" />\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.container}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import { useState } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = ['good', 'neutral', 'bad'];\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return countTotalFeedback\n      ? Math.round((good / countTotalFeedback()) * 100)\n      : 0;\n  };\n\n  const handleFeedback = e => {\n    const name = e.target.value;\n    switch (name) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave a feedback\">\n        <FeedbackOptions options={options} handleFeedback={handleFeedback} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}